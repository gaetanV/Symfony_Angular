<?php
namespace {{namespace}};

use Symfony\Component\Validator\Validation;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Validator\Validator\RecursiveValidator;


{% for assert in imports.asserts %}
use {{assert}};
{% endfor %}


class  {{classname}}
{
    private $validator;
    private $data = [];
   
    public function __construct(Request $request,RecursiveValidator $validator) {
    
        $this->validator = $validator;
        
    }
  
    public function isValid(){
    
    
{% for entity in entities %}
        $tmpEntity = new {{entity.name}}();
        $violations = $this->validator->validate($tmpEntity);
{% endfor %}          


        $validator = Validation::createValidator();
        $violations = validator->validate('Behat', array(new Asserts()));

        if (0 !== count($violations)) {
            foreach ($violations as $violation) {
                echo $violation->getMessage().'<br>';
            }
        }

    }
    
}















