<?php
/**
*  Validator PHP
*  (c) Gaetan Vigneron
*  This file is under control please don't touch it
*
*  @Core          : {{version}}
*  @Builder       : symfony_javascript https://github.com/gaetanV/symfony_javascript
*  @Use           : Symfony{{symfony_version}} https://github.com/symfony/symfony 
*  @Certification : {{security}}
*  @Date          : {{date| date("Y-m-d H:i:s")}}
*/

namespace {{namespace}};

use Symfony\Component\Validator\Validation;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Validator\Validator\RecursiveValidator;

{% for assert in imports.asserts %}
use {{assert}};
{% endfor %}


class  {{classname}} {
    private $validator;
    private $data = [];
   
    public function __construct(Request $request,RecursiveValidator $validator) {
    
        $this->validator = $validator;
        
    }
  
    public function isValid(){
    
    
{% for entity in entities %}
        $tmpEntity = new {{entity.name}}();
        $violations = $this->validator->validate($tmpEntity);
{% endfor %}          


        $validator = Validation::createValidator();
        $violations = validator->validate('Behat', array(new Asserts()));

        if (0 !== count($violations)) {
            foreach ($violations as $violation) {
                echo $violation->getMessage().'<br>';
            }
        }

    }
    
}















